@page


@using Microsoft.AspNetCore.Identity
@using GroupMeeting.Areas.Identity.Data;

@inject UserManager<User> UserManager

@model GroupMeeting.IndexModel

@{
    ViewData["Title"] = "Lista Group";
    bool isLoggin = User.Identity.IsAuthenticated;
}
<link rel="stylesheet" href="~/css/kp4.css" />

@if (!Model.QueryValue && Model.user != null)
{
    <h1>Lista grup do których dołączyłeś</h1>
}
else
{
    <h1>Lista wszystkich grup</h1>
}
<a asp-page="Index" asp-route-allGroups="false">Grupy w których jesteś</a>
<br />
<a asp-page="Index" asp-route-allGroups="true">Lista grup dostępnych</a>

<p>
    <a asp-page="Create">Create New</a>
</p>
<form method="post" asp-page-handler="Search">
    <div class="input-group">
        <label asp-for="GroupName.Name" class="control-label"></label>
        <input asp-for="GroupName.Name" class="form-control" />
        <span asp-validation-for="GroupName.Name" class="text-danger"></span>
    </div>
    <div class="input-group">
        <select asp-for="GroupName.CategoryId" asp-items="Model.CategoriesList">
            <option value="">Search by category</option>
        </select>
    </div>
    <div class="input-group">
        <label asp-for="GroupName.City" class="control-label"></label>
        <input asp-for="GroupName.City" class="form-control" />
        <span asp-validation-for="GroupName.City" class="text-danger"></span>
    </div>
    <button type-"submit">Szukaj</button>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Group[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Group[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Group[0].Owner)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Group[0].City)
            </th>
            <th>
                Kategoria
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Group)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Owner.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City.Name)
                </td>
                <td>
                    @foreach (var cat in item.GroupCategories)
                    {
                        <span>@Html.DisplayFor(modelItem => cat.Category.Name)</span>
                    }
                </td>
                <td>
                    @if (isLoggin)
                    {
                        @if (item.Owner == Model.user)
                        {
                            <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> <span>|</span>

                            <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a> <span>|</span>

                            <a asp-page="../Meetings/Create" asp-route-id="@item.ID"> Create Meeting</a> <span>|</span>
                        }
                        else
                        {
                            @if (!item.GroupUsers.Any(x => x.UserID == Model.user.Id))
                            {
                                <a asp-page="./Join" asp-route-id="@item.ID">Join</a> <span>|</span>
                            }
                            else
                            {
                                <a asp-page="./Leave" asp-route-id="@item.ID">Leave</a> <span>|</span>
                            }
                        }
                        <a asp-page="../Meetings/Index" asp-route-id="@item.ID">Meetings</a> <span>|</span>
                    }
                    <a asp-page="./Details" asp-route-id="@item.ID">Details</a>
                </td>

            </tr>
        }
    </tbody>
</table>
